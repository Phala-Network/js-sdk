{
  "source": {
    "hash": "0x1275c6fafe64436b6ad3c39c7e9b6204bbdcb63f4d09dc424176088cb0072d4d",
    "language": "ink! 3.3.0",
    "compiler": "rustc 1.62.0-nightly"
  },
  "contract": {
    "name": "fat_badges",
    "version": "0.1.0",
    "authors": [
      "Hang Yin <hangyin@phala.network>"
    ]
  },
  "V3": {
    "spec": {
      "constructors": [
        {
          "args": [],
          "docs": [],
          "label": "new",
          "payable": false,
          "selector": "0x9bae9d5e"
        }
      ],
      "docs": [],
      "events": [],
      "messages": [
        {
          "args": [
            {
              "label": "name",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 6
              }
            }
          ],
          "docs": [
            " Creates a new badge and become the admin of the badge",
            "",
            " Return the id of the badge."
          ],
          "label": "new_badge",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 14
          },
          "selector": "0x0df6030d"
        },
        {
          "args": [
            {
              "label": "id",
              "type": {
                "displayName": [
                  "u32"
                ],
                "type": 3
              }
            },
            {
              "label": "issuer",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Adds a badge issuer",
            "",
            " The caller must be the badge admin."
          ],
          "label": "add_issuer",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 16
          },
          "selector": "0x04d438b0"
        },
        {
          "args": [
            {
              "label": "id",
              "type": {
                "displayName": [
                  "u32"
                ],
                "type": 3
              }
            },
            {
              "label": "issuer",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Removes a badge issuer",
            "",
            " The caller must be the badge admin."
          ],
          "label": "remove_issuer",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 16
          },
          "selector": "0x5765dc58"
        },
        {
          "args": [
            {
              "label": "id",
              "type": {
                "displayName": [
                  "u32"
                ],
                "type": 3
              }
            },
            {
              "label": "code",
              "type": {
                "displayName": [
                  "Vec"
                ],
                "type": 17
              }
            }
          ],
          "docs": [
            " Appends a list of redeem code to a badge",
            "",
            " The caller must be the badge admin."
          ],
          "label": "add_code",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 16
          },
          "selector": "0xbe785fe9"
        },
        {
          "args": [],
          "docs": [
            " Returns the number of all the badges"
          ],
          "label": "get_total_badges",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "u32"
            ],
            "type": 3
          },
          "selector": "0x5883ec64"
        },
        {
          "args": [
            {
              "label": "id",
              "type": {
                "displayName": [
                  "u32"
                ],
                "type": 3
              }
            }
          ],
          "docs": [
            " Returns the detailed information of a badge"
          ],
          "label": "get_badge_info",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 18
          },
          "selector": "0xf4c2ab36"
        },
        {
          "args": [
            {
              "label": "id",
              "type": {
                "displayName": [
                  "u32"
                ],
                "type": 3
              }
            },
            {
              "label": "issuer",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Checks if an account is a badge issuer"
          ],
          "label": "is_badge_issuer",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "bool"
            ],
            "type": 19
          },
          "selector": "0xfac3bedd"
        },
        {
          "args": [
            {
              "label": "id",
              "type": {
                "displayName": [
                  "u32"
                ],
                "type": 3
              }
            }
          ],
          "docs": [
            " Reads the badge code assigned to the caller if exists"
          ],
          "label": "get",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 20
          },
          "selector": "0x2f865bd9"
        },
        {
          "args": [],
          "docs": [
            " Helper query to return the account id of the current contract instance"
          ],
          "label": "get_id",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "AccountId"
            ],
            "type": 0
          },
          "selector": "0x6919c214"
        },
        {
          "args": [
            {
              "label": "id",
              "type": {
                "displayName": [
                  "issuable_external",
                  "IssueInput1"
                ],
                "type": 3
              }
            },
            {
              "label": "dest",
              "type": {
                "displayName": [
                  "issuable_external",
                  "IssueInput2"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Issues a badge to the `dest` account",
            "",
            " The caller must be the badge admin or a badge issuer. Return a `RunOutOfCode` error",
            " when there's no enough redeem code to issue."
          ],
          "label": "Issuable::issue",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "issuable_external",
              "IssueOutput"
            ],
            "type": 16
          },
          "selector": "0x445c0488"
        }
      ]
    },
    "storage": {
      "struct": {
        "fields": [
          {
            "layout": {
              "cell": {
                "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "ty": 0
              }
            },
            "name": "admin"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
                "ty": 3
              }
            },
            "name": "total_badges"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0200000000000000000000000000000000000000000000000000000000000000",
                "ty": 4
              }
            },
            "name": "badge_info"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0300000000000000000000000000000000000000000000000000000000000000",
                "ty": 8
              }
            },
            "name": "badge_issuers"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0400000000000000000000000000000000000000000000000000000000000000",
                "ty": 11
              }
            },
            "name": "badge_code"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0500000000000000000000000000000000000000000000000000000000000000",
                "ty": 13
              }
            },
            "name": "badge_assignments"
          }
        ]
      }
    },
    "types": [
      {
        "id": 0,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 1,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_env",
            "types",
            "AccountId"
          ]
        }
      },
      {
        "id": 1,
        "type": {
          "def": {
            "array": {
              "len": 32,
              "type": 2
            }
          }
        }
      },
      {
        "id": 2,
        "type": {
          "def": {
            "primitive": "u8"
          }
        }
      },
      {
        "id": 3,
        "type": {
          "def": {
            "primitive": "u32"
          }
        }
      },
      {
        "id": 4,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 7,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 3
            },
            {
              "name": "V",
              "type": 5
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 5,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "id",
                  "type": 3,
                  "typeName": "u32"
                },
                {
                  "name": "admin",
                  "type": 0,
                  "typeName": "AccountId"
                },
                {
                  "name": "name",
                  "type": 6,
                  "typeName": "String"
                },
                {
                  "name": "num_code",
                  "type": 3,
                  "typeName": "u32"
                },
                {
                  "name": "num_issued",
                  "type": 3,
                  "typeName": "u32"
                }
              ]
            }
          },
          "path": [
            "fat_badges",
            "fat_badges",
            "BadgeInfo"
          ]
        }
      },
      {
        "id": 6,
        "type": {
          "def": {
            "primitive": "str"
          }
        }
      },
      {
        "id": 7,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 1,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_primitives",
            "Key"
          ]
        }
      },
      {
        "id": 8,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 7,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 9
            },
            {
              "name": "V",
              "type": 10
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 9,
        "type": {
          "def": {
            "tuple": [
              3,
              0
            ]
          }
        }
      },
      {
        "id": 10,
        "type": {
          "def": {
            "tuple": []
          }
        }
      },
      {
        "id": 11,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 7,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 12
            },
            {
              "name": "V",
              "type": 6
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 12,
        "type": {
          "def": {
            "tuple": [
              3,
              3
            ]
          }
        }
      },
      {
        "id": 13,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 7,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 9
            },
            {
              "name": "V",
              "type": 3
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 14,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 3
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 15
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 3
            },
            {
              "name": "E",
              "type": 15
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 15,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "BadOrigin"
                },
                {
                  "index": 1,
                  "name": "BadgeNotFound"
                },
                {
                  "index": 2,
                  "name": "NotAnIssuer"
                },
                {
                  "index": 3,
                  "name": "NotFound"
                },
                {
                  "index": 4,
                  "name": "RunOutOfCode"
                },
                {
                  "index": 5,
                  "name": "Duplicated"
                }
              ]
            }
          },
          "path": [
            "fat_badges",
            "fat_badges",
            "Error"
          ]
        }
      },
      {
        "id": 16,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 10
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 15
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 10
            },
            {
              "name": "E",
              "type": 15
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 17,
        "type": {
          "def": {
            "sequence": {
              "type": 6
            }
          }
        }
      },
      {
        "id": 18,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 5
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 15
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 5
            },
            {
              "name": "E",
              "type": 15
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 19,
        "type": {
          "def": {
            "primitive": "bool"
          }
        }
      },
      {
        "id": 20,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 6
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 15
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 6
            },
            {
              "name": "E",
              "type": 15
            }
          ],
          "path": [
            "Result"
          ]
        }
      }
    ]
  }
}